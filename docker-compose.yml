version: "3.2"

volumes:
  es_data:
    driver: local
  pgadmin_data:
    driver: local
  pg_data:
    driver: local

networks:
  elastic:
    driver: bridge

services:

  app:
    image: go-app:latest
    build:
      context: ./src
      dockerfile: ./app/Dockerfile
    container_name: go_app
    restart: unless-stopped
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "TestPassw0rd!"
      DB_NAME: "db"
      ES_HOST: "es"
      ES_PORT: "9200"
      SEED_FILE_PATH: "/app/posts.csv"
      ENVIRONMENT: "Docker"
    depends_on:
      es:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - elastic

  nginx:
    build:
      context: ./src/nginx
      dockerfile: Dockerfile
    container_name: go_nginx
    restart: unless-stopped
    ports:
      - 5000:8989
    depends_on:
      - app
    networks:
      - elastic

  db:
    image: postgres:13.2-alpine
    hostname: db
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 6432:5432
    container_name: go_db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_PASSWORD: "TestPassw0rd!"
      POSTGRES_USER: "postgres"
    networks:
      - elastic

  pgadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: go_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "test@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "TestPassw0rd!"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 6433:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - elastic

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: go_es
    environment:
      - "discovery.type=single-node"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
   # volumes:
   #   - es_data:/usr/share/elasticsearch/data
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic